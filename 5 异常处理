1 java的异常处理
在java程序中，当异常情况发生时，会创建一个代表该异常的对象，而且在错误出现的地方将这个异常抛出；
异常分两种：一、由运行时系统自动产生的异常；二、由用户代码用throw语句产生的异常。
1.1 异常的处理机制
通常异常处理的语句块：
try{
    可能产生错误需要被监视的语句序列
}catch(异常类型1 对象名){
    处理该异常类型的语句序列
}catch(异常类型2 对象名){
    处理该异常类型的语句序列
}
.....
catch(异常类型n 对象名){
    ....
}finally{
    资源保护语句序列
}
（1）try语句时必须的；
（2）catch和finally语句至少要存在其中的一条；
1.2 java异常的分类
java异常可分为运行时异常（非检测异常）、检查型异常（非运行时异常）以及自定义异常。
1.2.1运行时异常
大多数是由于程序设计不当而引发的错误，这种错误要在运行期间才会发生和被发现。
如果发生了这类异常，系统可以自动进行处理，并给出提示信息，程序员需要根据这些信息来改进程序。
1.2.2检测型异常
除了运行时异常外，其余的异常均为检查型异常；编译器在编译时会进行检查，一旦发现某些语句使得此类异常有产生的“可能”，就强制要求用户处理这类异常，否则不能通
过编译。
1.2.3自定义异常
如果系统定义的异常不能满足用户的需求，用户也可以自己定义异常；自定义异常是为了表示应用程序的一些错误类型，为代码可能发生的一个或多个问题提供了新含义。
1.2.4 java异常处理的原则
有以下几点：
（1）尽可能地处理
2 java异常处理实践

