1面向对象
类：类是具有共同属性、共同操作的对象的集合；单个对象则是所属类的一个成员，或称为实例；
面向对象的基本特征：抽象、封装、继承、多态；

2类与对象
2.1类的基本结构
[类修饰符] class 类名 [extends 父类名] [implements 接口名列表]
修饰符 final——最终类，它不能拥有子类；
abstract——抽象类，类中的方某些方法没有实现，必须由其子类来实现；
public——公共类，public表明本类可以被所属包以外的类访问；
2.2创建类体
class className{
    成员变量
    成员方法
    构造方法
}
变量和方法都是类的成员；对类的成员来说，可分为实例成员和类（静态）成员两种；
2.3对象的创建
要使用类需要通过类的实例——对象来实现
类名 对象名 = new 构造方法名 （[参数列表]）;
包含三个步骤：声明、实例化和初始化；
类名 对象名；//声明对象
new 构造方法（[参数列表]）//实例化对象
初始化对象——java规定，如果成员变量没有被显示的赋值，系统将自动为它们赋初值；
（所有简单变量除boolean类型外均赋初值为0，boolean类型赋初值为false,其它类型的对象均赋值为null）
2.4对象的使用
对象变量的使用——对象名.成员变量名 eg pt.x=6;
对象方法的调用——对象名.成员方法名（[参数列表]）eg pt.move(5,5);

3成员变量的定义与使用
3.1成员变量的定义——成员变量是定义在类里面，并和方法处于同一层次
[变量修饰符] 类型说明符 变量名
在一个类中成员变量应该是唯一的；
成员变量的类型可以是java中任意数据类型，包括基本类型、数组、类和接口；
（1）实例成员，在外部需要通过对象才能操作；
（2）静态成员，无需通过对象就能操作；
eg private double width,heigth;//定义两个私有的成员变量
public static int count;       //定义一个公共的静态类变量
public static final int COLORE=1；//定义一个公共的整型静态常量
3.2成员变量的访问权限
（1）公共变量——被public修饰的成员变量；允许在该变量所属的类中所有的方法访问，也允许其他类在外部访问；
（允许类在外部直接访问，破坏了封装原则，造成数据安全性下降；除非特别有需要，否则不要使用这种方案）
（2）私有变量——只允许在本类的内部访问，任何外部类都不能访问它；
为了让外部用户能够访问某些私有变量，通常类的设计者会提供一些方法给外部调用，这些方法被称为访问接口；所有的私有变量都只能通过程序员设计的接口来访问，
任何外部使用者都无法直接访问它；
（3）保护变量——被protected修饰的变量；除了允许在本类的内部访问之外，还允许它的子类以及同一个包中的其它类访问；
备注：子类如果和父类不在同一个包中，将无法通过‘对象名.变量名’的方式来访问protected类型的成员变量；
（4）默认的访问变量——frendly变量；只允许在同一个包中的其它类访问，即便是子类不在同一包中也不能访问；
3.3实例成员变量和静态成员变量
（1）实例成员变量
在类的内部，实例成员方法也可以直接访问实例成员变量；
在类的外部使用实例成员变量，需要先创建一个对象，然后通过‘对象名.变量名’来访问；
（2）静态成员变量——成员变量前加上static标识符就可以定义一个静态成员变量；
静态成员变量的特点：
它被类的所有对象共享，因此又被称为类变量；
保存在类的公共存储单元；可以在类的对象被创建之前就能使用；
可以通过‘对象名.变量名’的方式访问，也可以通过‘类名.变量名’的方式访问，二者完全等价；
eg 静态变量stat是一个公共变量，无论哪个对象改变了它的值，对其他的所有该类的对象都有效；

4方法的定义和实现
[方法修饰符] [方法返回值类型] 方法名 （[形式参数表]）
 
5方法的调用
6构造方法
7静态方法
8main()方法和命令行参数
9终结处理与垃圾回收
10本地方法


