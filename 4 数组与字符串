1 一维数组
1.1 一维数组的声明：
数据类型 数组名[] 或者 数据类型[] 数组名
类型是元素所拥有的类型；数据数组名是用户自己定义的合法的标识符，[]表示这是一个数组；[]内必须为空，不允许在其中指定数组的长度。
eg int ar[]; 
double [] fr;
元素的类型不仅可以是基本数据类型，也可以是java中任意合法的类类型,eg myClass ar[];
1.2 一维数组的创建——创建一个数组有两种方式：初始化和使用关键字new.
（1）初始化：数据类型 数组名[] = {值1，值2，值3，....，值n};eg int a [] = {14,32,56,27};
（2）使用关键字new：
数据类型 数组名[]; 数组名 = new 数据类型 [数组长度]；
数据类型 数组名[] = new 数据类型 [数组长度]; eg int a[] = new int [5];
（3）使用clone()方法：
数组拥有一个clone()方法，可以返回一个和原数组一模一样的新数组元素；
eg int a[] = {1,2,3,4,5,6}; int [] b = (int[])a.clone();
注：数组a和数组b的类型必须完全一致；执行此操作后，a会将自己复制一份给b，所以b数组和a数组长度以及元素中的值会完全一样。
（4）引用其他数组：
eg int [] b = a;
这种方法实质上增加了一个对a的引用；b和a指向了同一个数组，无论a还是b对数组进行的操作，对另一个都会造成影响。
1.3 一维数组的使用
数组名[下标];[]中的下标是介于[0,数组长度]之间的整型数或整型表达式。
2 二维数组
2.1二维数组的声明
数据类型 数组名[][]   或者 数据类型[][] 数组名   或者 数据类型[] 数组名[](这种形式不常用）
eg int a[][]; 
double [][]b;
myClass[] c[];
java中的二维数组允许每行中的元素个数不同，换言之就是构成二维数组的每个一维数组的长度可以不相同；
2.2二维数组的创建
（1）初始化：数据类型 数组名[][]={{初始值1}，{初始值2}，{初始值3}，....{初始值n}};
eg int b[][]={{1,2},{2,3,4},{3,4,5,6}};这里的二维数组b由3个一维数组构成，每个一维数组的名字依次是：b[0]、b[1]、b[2],长度分别是2,3,4;
（2）利用new一次性创建
数据类型 数组名[][] = new 数据类型 [行数][列数];（行数是指二维数组的长度，列数是指每个元素（一维数组）的长度）
eg int b[][]=new int[3][4];
（3）利用new分批创建
可以利用new来先创建数组本身，然后根据需要再为每个元素创建一维数组对象。
int b[][];
b=new int[3][];'//b由3个一维数组组成
b[0]=new int [1];//分别创建每个一维数组
b[1]=new int [2];
b[2]=new int [3];
（4）利用数组的clone()方法
eg int b[][]={{1,2},{3,4,5},{6,7,8,9}};
int a[]=(int [][])b.clone();
（5）增加了一个引用
eg int b[][]={{1,2},{3,4,5},{6,7,8,9}};
int a[][] = b;这种方法只是增加了b的一个引用；a和b指向了同一个数组，对其中任何一个的修改，必会影响到另外一个。
2.3 二维数组的使用
数组名[行号][列号] eg k=a[3][4];

3 字符串——java专门为存储和处理字符串提供了两个类：String和StringBuff类
3.1 String对象的声明
String类有大量的方法用于处理字符串，对字符串数据的任何操作都必须通过这些方法来进行（需要特别注意：本类是最终类，不允许继承）
声明一个String类型的变量和声明普通变量形同：
String 变量名；
3.2 String对象的创建
3.2.1初始化
通过初始化的方法来创建对象，同时为该对象赋值 eg String str = "hello";
3.2.2 使用new关键字，创建String对象
String str = new String{"hello"};
3.2.3 通过任何可以返回字符串的方法
java中提供了大量的可以返回一个字符串的方法，用一个String变量接收这些返回值的同时就创建了该对象。
eg String strHex = Integer.toHexString(1235);
Integer类中提供了一个静态方法toHexString(),可以将指定的整型数据转换为一个十六进制的字符串返回。





